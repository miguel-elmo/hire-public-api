openapi: 3.0.0
info:
    title: Recruitment's Public API
    description: |-
        Collection of Public API for 3rd party integration with ELMO's Recruitment.
    version: v1
servers:
    - url: https://[tenant].elmotalent.com.au/api/recruitment/v1

paths:
    /candidates/discovery:
        post:
            tags:
                - Candidate Discovery
            summary: Suggest a new Candidate to a Job Ad.
            requestBody:
                description: This creates a Candidate with a discovery status under the given Job Ad.
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/CandidateDiscoveryCreate'
            responses:
                201:
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CandidateDiscoveryQuery'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                422:
                    description: Unprocessable Content
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorsGetResponse'
                500:
                    description: Internal Server error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
    /candidates/discovery/{id}/resume:
        put:
            tags:
                - Job Application
            summary: Upload the candidate's cover letter to the job application.
            description: |
                Upload the candidate's cover letter to the job application.

                It overrides any existing cover letter in the application.

                Max file size is 5 MB.
            parameters:
                - in: path
                  name: id
                  schema:
                      type: string
                  required: true
                  description: ID of the job application.
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: The file to upload
            responses:
                200:
                    description: Created
                403:
                    description: Forbidden.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                413:
                    description: Exceeded the file size limit.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                415:
                    description: Invalid file type.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                500:
                    description: Internal Server error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
    /candidates/discovery/{id}/cover-letter:
        put:
            tags:
                - Job Application
            summary: Upload the candidate's resume to the job application.
            description: |
                Upload the candidate's resume to the job application.

                It overrides any existing resume in the application.

                Max file size is 5 MB.
            parameters:
                - in: path
                  name: id
                  schema:
                      type: string
                  required: true
                  description: ID of the job application.
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: The file to upload
            responses:
                200:
                    description: Created
                403:
                    description: Forbidden.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                413:
                    description: Exceeded the file size limit.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                415:
                    description: Invalid file type.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'
                500:
                    description: Internal Server error.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGetResponse'

components:
    schemas:
        CandidateDiscoveryCreate:
            type: object
            properties:
                jobAdId:
                    type: string
                candidate:
                    type: object
                    $ref: '#/components/schemas/CandidateCreate'
            required:
                - jobAdId
                - candidate

        CandidateCreate:
            type: object
            required:
                - firstName
                - lastName
                - email
            properties:
                id:
                    type: string
                    example: "10"
                firstName:
                    type: string
                    example: "John"
                    minLength: 3
                    maxLength: 255
                lastName:
                    type: string
                    example: "Doe"
                    minLength: 3
                    maxLength: 255
                email:
                    type: string
                    example: "john.doe@noreply.com"
                    format: email
                    maxLength: 60
                addressLine1:
                    type: string
                    maxLength: 255
                addressLine2:
                    type: string
                    maxLength: 255
                suburb:
                    type: string
                    maxLength: 255
                state:
                    type: string
                    maxLength: 255
                postcode:
                    type: string
                    maxLength: 30
                country:
                    type: string
                    maxLength: 30
                homePhone:
                    type: string
                    maxLength: 30
                mobile:
                    type: string
                    maxLength: 30
                education:
                    type: array
                    items:
                        $ref: '#/components/schemas/EducationCreate'
                languages:
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageCreate'
                experience:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExperienceCreate'
                skills:
                    type: array
                    items:
                        $ref: '#/components/schemas/SkillCreate'

        CandidateQuery:
            type: object
            properties:
                id:
                    type: string
                    example: "10"
                firstName:
                    type: string
                    example: "John"
                    minLength: 3
                    maxLength: 255
                lastName:
                    type: string
                    example: "Doe"
                    minLength: 3
                    maxLength: 255
                email:
                    type: string
                    example: "john.doe@noreply.com"
                    format: email
                    maxLength: 60
                addressLine1:
                    type: string
                    maxLength: 255
                addressLine2:
                    type: string
                    maxLength: 255
                suburb:
                    type: string
                    maxLength: 255
                state:
                    type: string
                    maxLength: 255
                postcode:
                    type: string
                    maxLength: 30
                country:
                    type: string
                    maxLength: 30
                homePhone:
                    type: string
                    maxLength: 30
                mobile:
                    type: string
                    maxLength: 30
                education:
                    type: array
                    items:
                        $ref: '#/components/schemas/EducationQuery'
                languages:
                    type: array
                    items:
                        $ref: '#/components/schemas/LanguageQuery'
                experience:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExperienceQuery'
                skills:
                    type: array
                    items:
                        $ref: '#/components/schemas/SkillQuery'

        EducationCreate:
            type: object
            required:
                - school
                - degree
            properties:
                school:
                    type: string
                degree:
                    type: string
                fieldOfStudy:
                    type: string
                activities:
                    type: string
                description:
                    type: string
                startDateYear:
                    type: integer
                endDateYear:
                    type: integer

        EducationQuery:
            type: object
            properties:
                id:
                    type: string
                school:
                    type: string
                degree:
                    type: string
                fieldOfStudy:
                    type: string
                activities:
                    type: string
                description:
                    type: string
                startDateYear:
                    type: integer
                endDateYear:
                    type: integer

        LanguageCreate:
            type: object
            required:
                - code
                - name
            properties:
                code:
                    type: string
                name:
                    type: string
                ratingSpeaking:
                    type: integer
                ratingReading:
                    type: integer
                ratingWriting:
                    type: integer

        LanguageQuery:
            type: object
            properties:
                id:
                    type: string
                code:
                    type: string
                name:
                    type: string
                ratingSpeaking:
                    type: integer
                ratingReading:
                    type: integer
                ratingWriting:
                    type: integer

        ExperienceCreate:
            type: object
            required:
                - positionTitle
                - companyName
            properties:
                positionTitle:
                    type: string
                companyName:
                    type: string
                companyAddress:
                    type: string
                startDateMonth:
                    type: string
                startDateYear:
                    type: integer
                endDateMonth:
                    type: string
                endDateYear:
                    type: integer
                isCurrent:
                    type: boolean

        ExperienceQuery:
            type: object
            properties:
                id:
                    type: string
                positionTitle:
                    type: string
                companyName:
                    type: string
                companyAddress:
                    type: string
                startDateMonth:
                    type: string
                startDateYear:
                    type: integer
                endDateMonth:
                    type: string
                endDateYear:
                    type: integer
                isCurrent:
                    type: boolean

        SkillCreate:
            type: object
            required:
                - title
            properties:
                title:
                    type: string

        SkillQuery:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string

        CandidateDiscoveryQuery:
            type: object
            properties:
                id:
                    type: string
                jobAdId:
                    type: string
                dateSubmitted:
                    type: string
                    format: date-time
                screeningQuestions:
                    type: array
                    items:
                        $ref: '#/components/schemas/ScreeningQuestionQuery'
                candidate:
                    type: object
                    $ref: '#/components/schemas/CandidateQuery'
                links:
                    type: object
                    properties:
                        resume:
                            type: string
                        coverLetter:
                            type: string

        ErrorGetResponse:
            type: object
            properties:
                type:
                    type: integer
                error:
                    type: string
                status:
                    type: string
                message:
                    type: string
                instance:
                    type: string

        ErrorsGetResponse:
            type: object
            properties:
                type:
                    type: integer
                errors:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                message:
                    type: string
                instance:
                    type: string

        ScreeningQuestionQuery:
            type: object
            properties:
                questionId:
                    type: string
                question:
                    type: string
                questionType:
                    $ref: '#/components/schemas/EnumQuestionTypes'
                answerValue:
                    type: string
                answerText:
                    type: string

        EnumQuestionTypes:
            type: string
            enum:
                - "TEXT"
                - "DATE"
                - "SELECT"
                - "MULTISELECT"
                - "FILE"

        Pagination:
            type: object
            properties:
                page:
                    type: integer
                itemsPerPage:
                    type: integer
                totalItems:
                    type: integer

        MetadataListQuery:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/Pagination'
